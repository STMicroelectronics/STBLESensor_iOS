<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/IFlySpeechSynthesizer.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/IFlySpeechSynthesizer</TokenIdentifier>
			<Abstract type="html">语音合成</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
            
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/setDelegate:</TokenIdentifier>
			<Abstract type="html">设置识别的委托对象</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) id&lt;IFlySpeechSynthesizerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/delegate</TokenIdentifier>
			<Abstract type="html">设置识别的委托对象</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) id&lt;IFlySpeechSynthesizerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/IFlySpeechSynthesizer/delegate</TokenIdentifier>
			<Abstract type="html">设置识别的委托对象</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) id&lt;IFlySpeechSynthesizerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/IFlySpeechSynthesizer/sharedInstance</TokenIdentifier>
			<Abstract type="html">返回合成对象的单例</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstance</Declaration>
			
			<ReturnValue><Abstract type="html">合成对象</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/IFlySpeechSynthesizer/destroy</TokenIdentifier>
			<Abstract type="html">销毁合成对象。</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>+ (BOOL)destroy</Declaration>
			
			<ReturnValue><Abstract type="html">成功返回YES,失败返回NO.</Abstract></ReturnValue>
			<Anchor>//api/name/destroy</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/setParameter:forKey:</TokenIdentifier>
			<Abstract type="html">设置合成参数</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>- (BOOL)setParameter:(NSString *)value forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">参数取值</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">合成参数</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">设置成功返回YES，失败返回NO</Abstract></ReturnValue>
			<Anchor>//api/name/setParameter:forKey:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/parameterForKey:</TokenIdentifier>
			<Abstract type="html">获取合成参数</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>- (NSString *)parameterForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">参数key</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">参数值</Abstract></ReturnValue>
			<Anchor>//api/name/parameterForKey:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/startSpeaking:</TokenIdentifier>
			<Abstract type="html">开始合成(播放)&lt;br&gt;
调用此函数进行合成，如果发生错误会回调错误onCompleted</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>- (void)startSpeaking:(NSString *)text</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract type="html">合成的文本,最大的字节数为1k</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startSpeaking:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/synthesize:toUri:</TokenIdentifier>
			<Abstract type="html">开始合成(不播放)&lt;br&gt;
调用此函数进行合成，如果发生错误会回调错误onCompleted</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>- (void)synthesize:(NSString *)text toUri:(NSString *)uri</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract type="html">合成的文本,最大的字节数为1k</Abstract>
				</Parameter><Parameter>
					<Name>uri</Name>
					<Abstract type="html">合成后，保存再本地的音频路径</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/synthesize:toUri:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/pauseSpeaking</TokenIdentifier>
			<Abstract type="html">暂停播放&lt;br&gt;
暂停播放之后，合成不会暂停，仍会继续，如果发生错误则会回调错误onCompleted</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>- (void)pauseSpeaking</Declaration>
			
			
			<Anchor>//api/name/pauseSpeaking</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/resumeSpeaking</TokenIdentifier>
			<Abstract type="html">恢复播放</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>- (void)resumeSpeaking</Declaration>
			
			
			<Anchor>//api/name/resumeSpeaking</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/stopSpeaking</TokenIdentifier>
			<Abstract type="html">停止播放并停止合成</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>- (void)stopSpeaking</Declaration>
			
			
			<Anchor>//api/name/stopSpeaking</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/setIsSpeaking:</TokenIdentifier>
			<Abstract type="html">是否正在播放</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isSpeaking</Declaration>
			
			
			<Anchor>//api/name/isSpeaking</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechSynthesizer/isSpeaking</TokenIdentifier>
			<Abstract type="html">是否正在播放</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isSpeaking</Declaration>
			
			
			<Anchor>//api/name/isSpeaking</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/IFlySpeechSynthesizer/isSpeaking</TokenIdentifier>
			<Abstract type="html">是否正在播放</Abstract>
			<DeclaredIn>IFlySpeechSynthesizer.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isSpeaking</Declaration>
			
			
			<Anchor>//api/name/isSpeaking</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
        
        
	</File>
</Tokens>